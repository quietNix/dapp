{"version":3,"sources":["../node_modules/gun sync","utility/user.js","state/action.js","component/Header.jsx","component/ChatMessage.jsx","component/Login.jsx","component/Sidebar.jsx","component/Chat.jsx","component/App.jsx","state/reducers.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","db","Gun","peers","user","recall","sessionStorage","SetUsername","username","store","dispatch","type","payload","get","on","v","event","a","alias","console","log","connect","state","className","src","alt","onClick","leave","ChatMessage","props","messageClass","who","sender","avatar","ts","Date","when","what","toLocaleTimeString","Login","login","document","getElementById","value","toLowerCase","password","auth","err","alert","htmlFor","name","minLength","maxLength","create","Sidebar","chatRoom","setChatRoom","commonBtnRef","useRef","gamesBtnRef","academicsBtnRef","handleChatRoom","room","useEffect","current","classList","add","remove","ref","SEA","GUN","unreadMessages","autoScroll","objDiv","scrollTop","scrollHeight","useState","canAutoScroll","setAutoScroll","newMessage","setNewMessage","messages","setMessages","rooms","preventDefault","encrypt","secret","index","toISOString","message","set","put","Object","map","once","data","key","decrypt","is","slice","sort","b","prev","onScroll","onSubmit","placeholder","onChange","target","disabled","App","params","initialState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30f979a1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;","import Gun from \"gun\";\r\nimport 'gun/sea';\r\nimport 'gun/axe';\r\nimport { store } from \"../index\";\r\nimport { setUsername } from \"../state/action\";\r\n\r\n// Database\r\nexport const db = Gun({\r\n    peers: [\r\n        // 'http://localhost:3030/gun'\r\n        'https://quietnix-dapp.herokuapp.com/gun'\r\n    ]\r\n});\r\n\r\n\r\n// Gun User\r\nexport const user = db.user().recall({ sessionStorage: true });\r\n\r\n\r\n//set global state here named username\r\nexport function SetUsername(username) {\r\n    store.dispatch(setUsername(username))\r\n    // store.dispatch({\r\n    //     type: \"USER_AUTH_STATUS\",\r\n    //     payload: username\r\n    // })\r\n}\r\n\r\nuser.get('alias').on(v => SetUsername(v))\r\n\r\ndb.on('auth', async (event) => {\r\n    const alias = await user.get('alias'); // username string\r\n    SetUsername(alias);\r\n    console.log(`signed in as ${alias}`);\r\n});","export const setUsername=(verdict)=>{\r\n    return({\r\n        type: \"USER_AUTH_STATUS\",\r\n        payload: verdict\r\n    })\r\n}","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { user, SetUsername } from \"../utility/user\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.username\r\n    }\r\n}\r\n\r\nfunction Header({ username }) {\r\n\r\n    function signout() {\r\n        user.leave();\r\n        SetUsername('')\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <h1>💬</h1>\r\n            {(username === '') ?\r\n                <h3>Dapp Chat</h3>\r\n                :\r\n                <Fragment>\r\n                    <div className=\"user-bio\">\r\n                        <span><strong>{username}</strong></span>\r\n                        <img src={`https://avatars.dicebear.com/api/initials/${username}.svg`} alt=\"avatar\" />\r\n                    </div>\r\n                    <button className=\"signout-button\" onClick={signout}>Sign Out</button>\r\n                </Fragment>\r\n            }\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from \"react\";\r\n\r\nfunction ChatMessage(props){\r\n    const messageClass = props.who === props.sender ? 'sent' : 'received';\r\n    const avatar = `https://avatars.dicebear.com/api/initials/${props.who}.svg`;\r\n    const ts = new Date(props.when);\r\n\r\n    return(\r\n        <div className={`message ${messageClass}`}>\r\n            \r\n            <img src={avatar} alt=\"avatar\" />\r\n            <div className=\"message-text\">\r\n                <p>{props.what}</p>\r\n                <time>{ts.toLocaleTimeString()}</time>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage;","import React from \"react\";\r\nimport { user } from '../utility/user';\r\n\r\nfunction Login() {\r\n\r\n    let username;\r\n    let password;\r\n\r\n    //USER AUTHENTICATION\r\n    function login() {\r\n        let username = document.getElementById(\"username\").value.toLowerCase();\r\n        let password = document.getElementById(\"password\").value;\r\n        user.auth(username, password, ({ err }) => err && alert(err));\r\n    }\r\n\r\n    //enforce Uniqueness of user\r\n    //USER CREATION\r\n    function signup() {\r\n        let username = document.getElementById(\"username\").value;\r\n        let password = document.getElementById(\"password\").value;\r\n        user.create(username, password, ({ err }) => {\r\n            if (err) {\r\n                alert(err);\r\n            } else {\r\n                login();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input className=\"credential\" id=\"username\" name=\"username\" value={username} minLength=\"3\" maxLength=\"16\" />\r\n            \r\n            <label htmlFor=\"password\">Password</label>\r\n            <input className=\"credential\" id=\"password\" name=\"password\" value={password} type=\"password\" />\r\n            \r\n            <button className=\"login\" onClick={login}>Login</button>\r\n            <button className=\"login\" onClick={signup}>Sign Up</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Sidebar({ chatRoom, setChatRoom }) {\r\n\r\n    const commonBtnRef = useRef(null);\r\n    const gamesBtnRef = useRef(null);\r\n    const academicsBtnRef = useRef(null);\r\n\r\n    function handleChatRoom(room) {\r\n        console.log(room)\r\n        setChatRoom(room)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        switch (chatRoom) {\r\n            case \"common\":\r\n                commonBtnRef.current.classList.add(\"sidebar__btn--selected\")\r\n                gamesBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                academicsBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                break;\r\n            case \"games\":\r\n                gamesBtnRef.current.classList.add(\"sidebar__btn--selected\")\r\n                commonBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                academicsBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                break;\r\n            case \"academics\":\r\n                academicsBtnRef.current.classList.add(\"sidebar__btn--selected\")\r\n                commonBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                gamesBtnRef.current.classList.remove(\"sidebar__btn--selected\")\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n    return (\r\n        <aside className=\"sidebar\">\r\n            <nav>\r\n                <p className=\"sidebar__btn\" ref={commonBtnRef} onClick={() => { handleChatRoom(\"common\") }}>Common</p>\r\n                <p className=\"sidebar__btn\" ref={gamesBtnRef} onClick={() => { handleChatRoom(\"games\") }}>Games</p>\r\n                <p className=\"sidebar__btn\" ref={academicsBtnRef} onClick={() => { handleChatRoom(\"academics\") }}>Academics</p>\r\n            </nav>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { db, user } from \"../utility/user\";\r\nimport { connect } from \"react-redux\";\r\nimport debounce from 'lodash.debounce';\r\nimport ChatMessage from './ChatMessage';\r\nimport Login from \"./Login\";\r\n\r\nimport GUN from \"gun\";\r\nimport Sidebar from \"./Sidebar\";\r\nconst SEA = GUN.SEA;\r\n\r\n\r\n// let lastScrollTop;\r\nlet unreadMessages = false;\r\n\r\nfunction autoScroll() {\r\n    var objDiv = document.getElementById(\"cont\");\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n}\r\n\r\n// function watchScroll(e) {\r\n//     canAutoScroll = (e.target.scrollTop || Infinity) > lastScrollTop;\r\n//     lastScrollTop = e.target.scrollTop;\r\n// }\r\n\r\n// let debouncedWatchScroll = debounce(watchScroll, 1000);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.username\r\n    }\r\n}\r\n\r\n\r\nfunction Chat({ username }) {\r\n    const [chatRoom, setChatRoom] = useState(\"common\")\r\n    const [canAutoScroll, setAutoScroll] = useState(true);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [messages, setMessages] = useState({\r\n        \"common\": [],\r\n        \"games\": [],\r\n        \"academics\": []\r\n    });\r\n\r\n    const rooms = {\r\n        \"common\": [],\r\n        \"games\": [],\r\n        \"academics\": []\r\n    }\r\n\r\n    //ACCESSING DATA\r\n    useEffect(() => {\r\n        if (username === '') return;\r\n\r\n        Object.keys(rooms).map(room => {\r\n            db.get(room)\r\n                .map()\r\n                .once(async (data, id) => {\r\n                    if (data) {\r\n                        // Key for end-to-end encryption\r\n                        const key = '#Nikhil';\r\n                        var message = {\r\n                            // transform the data\r\n                            who: await db.user(data).get('alias'), // a user might lie who they are! So let the user system detect whose data it is.\r\n                            what: (await SEA.decrypt(data.what, key)) + '', // force decrypt as text.\r\n                            when: GUN.state.is(data, 'what'), // get the internal timestamp for the what property.\r\n                        };\r\n\r\n                        if (message.what) {\r\n\r\n                            rooms[room] = [...rooms[room].slice(-50), message].sort((a, b) => a.when - b.when); //will keep only latest 100 in array\r\n                            setMessages((prev) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [room]: rooms[room]\r\n                                }\r\n                            })\r\n\r\n                            if (canAutoScroll) { autoScroll(); setAutoScroll(false) }\r\n                            else unreadMessages = true;\r\n                        }\r\n                    }\r\n                })\r\n        })\r\n\r\n        console.log(messages)\r\n\r\n    }, [username]);\r\n\r\n    function handleChange(event) {\r\n        const { value } = event.target;\r\n        setNewMessage(value);\r\n    }\r\n\r\n    //SENDING DATA\r\n    async function sendMessage(event) {\r\n        event.preventDefault();\r\n        const secret = await SEA.encrypt(newMessage, '#Nikhil');\r\n        const index = new Date().toISOString();\r\n        const message = user.get('all').set({ what: secret });\r\n        db.get(chatRoom).get(index).put(message);\r\n        setNewMessage('');\r\n        setAutoScroll(true);\r\n        autoScroll();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                username !== ''\r\n                &&\r\n                <Sidebar\r\n                    chatRoom={chatRoom}\r\n                    setChatRoom={setChatRoom}\r\n                />\r\n            }\r\n            {(username === '') ?\r\n                <div className=\"div-main\">\r\n                    <Login />\r\n                </div>\r\n                :\r\n                <Fragment>\r\n                    {/* <main onScroll={debouncedWatchScroll} id=\"cont\"> */}\r\n                    <main onScroll={() => { console.log(\"scroll\"); }} id=\"cont\">\r\n                        {messages[chatRoom].map(message => {\r\n                            return (\r\n                                <ChatMessage\r\n                                    id={message.when}\r\n                                    key={message.when}\r\n                                    when={message.when}\r\n                                    what={message.what}\r\n                                    who={message.who}\r\n                                    sender={username}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </main>\r\n                    <form onSubmit={sendMessage}>\r\n                        <input type=\"text\" placeholder=\"Type a message...\" onChange={handleChange} value={newMessage} maxLength=\"100\" />\r\n                        <button className=\"sent-emogy\" type=\"submit\" disabled={!newMessage}>🛩️</button>\r\n                    </form>\r\n                    {!canAutoScroll ?\r\n                        <div className=\"scroll-button\">\r\n                            <button onClick={autoScroll}>\r\n                                {unreadMessages ? \"💬\" : \"👇\"}\r\n                            </button>\r\n                        </div>\r\n                        : \"\"\r\n                    }\r\n                </Fragment>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Chat);","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Chat from \"./Chat\";\nimport \"./global.scss\";\n\nfunction App(params) {\n  return(\n    <div className = \"app\">\n      <Header/>\n      <Chat/>\n    </div>\n  )\n}\n\nexport default App;","const initialState = {\r\n    username: ''\r\n}\r\n\r\nexport const requestUserReducer = (state = initialState, action={})=>{\r\n    switch(action.type){\r\n        case \"USER_AUTH_STATUS\":\r\n            return{...state, username: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore} from \"redux\";\nimport App from './component/App';\nimport { requestUserReducer } from \"./state/reducers\";\nimport reportWebVitals from './reportWebVitals';\n\nexport const store = createStore(requestUserReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}